version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - DATABASE_URL=postgresql://loyalty_user:loyalty_pass@db:5432/loyalty_db
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    restart: always
    environment:
      - NEXT_PUBLIC_API_URL=https://your-domain.com
    depends_on:
      - backend

  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: loyalty_user
      POSTGRES_PASSWORD: loyalty_pass
      POSTGRES_DB: loyalty_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis_data:/data

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done"

volumes:
  postgres_data:
  redis_data:
